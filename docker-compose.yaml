version: '3'

#no docker-compose adicionamos os serviços que serão usados no projeto
services:
#container da aplicação -> para o go ter acesso aos outros serviços no docker
goapp:
  build: .
  volumes:
    .:/go/app
  plataform: linux/amd64
  ports:
    - "8000:8000"
  extra_hosts:
    - "host.docker.internal:172.17.0.1" 

#banco de dados
  mysql:
    image: mysql:5.7
    container_name: mysql
    #restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: products
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    # salvar dados do bd na partição
    volumes:
      - ./mysql:/var/lib/mysql
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"

#gerenciador das mensagens e stream de dados no kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

#kafka é um serviço de mensageria e stream de dados
  kafka:
    image: confluentinc/cp-server:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      #KAFKA_LISTENER_SECURITY_PROCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT, INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT 
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    extra_hosts:
      - "host.docker.internal:172.17.0.1"





 # rabbitmq:
 # image: rabbitmq:3-management
 # container_name: rabbitmq
 # restart: always
 # ports: 
  #  - 5672:5672
  #  - 15672:15672
